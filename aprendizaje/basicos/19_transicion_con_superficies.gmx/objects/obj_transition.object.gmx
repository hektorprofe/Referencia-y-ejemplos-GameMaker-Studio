<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Estados
FadeOut = 0;
FadeIn = 1;
ChangeRoom = 2;

TargetRoom = -1;
State = FadeOut;

// Prevenimos que exista más de una instancia de este objeto
if ( instance_number(self) &lt;= 1)
{
    alpha_level = 0;
    alpha_increment = 0.03;

    // Tomamos una captura del juego    
    screenshot = surface_create(view_wport + view_xview[0],
                                view_hport + view_yview[0]);
    
    // Renderizamos la superficie con la captura
    surface_set_target(screenshot);
    
    // Borramos el contenido de la superficie, por si acaso
    draw_clear_alpha(c_black, 0); 
    
    // Para todos los objetos del juego
    with(all)
    {
        // que sean visibles
        if (visible)
            // los dibujamos en la superficie (asi creamos realmente la captura)
            event_perform(ev_draw, 0);
    }
    
    // Reactivamos la superficie general de game maker
    surface_reset_target();
    
    // Desactivamos todas las instancias
    instance_deactivate_all(true);
    
}
else instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Qué hacer en cada estado
switch(State)
{
    case FadeOut:
        // Transición de salida, incrementamos la opacidad del rectangulo oscuro
        alpha_level += alpha_increment;
        // hasta el máximo y cambiamos el estado
        if (alpha_level &gt;=1) State = ChangeRoom;
        break;
    
    case ChangeRoom:
        // Cambio a la siguiente room
        room_goto(TargetRoom);
    
        // Activamos todas las instancias
        instance_activate_all();
        
        // Renderizamos la superficie con la captura
        surface_set_target(screenshot);
        
        // Borramos el contenido de la superficie, por si acaso
        draw_clear_alpha(c_black, 0);
        
        // Para todos los objetos del juego
        with(all)
        {
            // que sean visibles
            if (visible)
                // los dibujamos en la superficie (asi creamos realmente la captura)
                event_perform(ev_draw, 0);
        }
        
        // Reactivamos la superficie general de game maker
        surface_reset_target();
        
        // Desactivamos todas las instancias
        instance_deactivate_all(true);
        
        // Cambiamos al último estado
        State = FadeIn;
        break;
    
    case FadeIn:
        // Transición de entrada, decrementamos la opacidad del rectangulo oscuro
        alpha_level -= alpha_increment;
        // hasta el mínimo y destruimos el objeto transition
        if (alpha_level &lt;= 0)
        {
            instance_activate_all();
            instance_destroy();
        }
        break;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// Dibujamos la superficie y le damos la transparencia
draw_set_alpha(1);
draw_surface(screenshot, 0, 0);
draw_set_alpha(alpha_level);
draw_set_color(c_black);
// Y encima le dibujamos el rectángulo negro que ocupa toda la room
draw_rectangle(0, 0, room_width, room_height, false);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
