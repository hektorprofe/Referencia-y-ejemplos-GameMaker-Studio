<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>obj_transition_base</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>a = 0;    // En esta variable iremos guardando la transparencia
fade = 1; // Empezamos con transparencia al máximo: 1 = desaparecer, -1 = aparecer
target = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// En cada Draw vamos aumentando/decrementando un poco la transparencia
// Nos aseguramos que el valor esté siempre entre 0 y 1 con clamp()
a = clamp(a + (fade * 0.035),0,1);

// Si no hay transparencia, entonces nos movemos de room  
if (a == 1)
{
    room_goto(target);
    // Cambiamos fade a negativo para indicar que se "ha de aparecer"
    fade = -1;
}

// Si estamos en modo aparecer y la transparencia está al mínimo, hemos acabado
if (a == 0) &amp;&amp; (fade == -1)
{
    instance_destroy(); // Destruimos el objeto
}

// Después de las comprobaciones creamos un rectangulo negro que ocupe toda la view
// Y le damos la transparencia variable que tenemos almacenada en a
draw_set_color(c_black);
draw_set_alpha(a);
draw_rectangle(
    view_xview[0], 
    view_yview[0], 
    view_xview[0] + view_wview[0],
    view_yview[0] + view_hview[0],
    0
);

// Importante desactivar la transparencia de nuevo
draw_set_alpha(1);
draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
