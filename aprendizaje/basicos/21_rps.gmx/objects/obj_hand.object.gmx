<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
hand = "";
fade = false;
move = false;
move_to_center = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Move to center point</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set moving
move = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fade effect
if (fade == true) {
    if (image_alpha &gt; 0) image_alpha -= 0.1;
    if (image_alpha == 0) fade = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move towards
if (move == true) {
    if (point_distance(x, y, obj_paper.xstart, obj_paper.ystart) &gt; 10) {
        move_towards_point(obj_paper.xstart, obj_paper.ystart, 10);
    } else {
        x = obj_paper.xstart;
        y = obj_paper.ystart;
        speed = 0;
        move = false;   
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move to center
if ( move_to_center == true ) {
    if (point_distance(x, y, x, view_hview[0]/2 + sprite_height/2 - 80) &gt; 12){
        move_towards_point(x, view_hview[0]/2 + sprite_height/2 - 80, 12);
    } else {
        y = view_hview[0]/2 + sprite_height/2 - 80;
        move_to_center = false;   
        speed = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// First Check Online Game
if instance_exists(obj_game_online) {
    if (obj_game_online.select_enabled) {
        if (obj_game_online.selected_hand != hand){
            with(obj_hand) {
                image_index = 1;
            }
            obj_game_online.selected_hand = hand;
            image_index = 0;
            obj_game_online.player_text = "Again to confirm";
            show_debug_message("Selected hand: " + hand );
        } else {
            obj_game_online.select_enabled = false;
            obj_game_online.player_text = "";
            // Set as current hand
            obj_game_online.current_hand = id;
            show_debug_message("Confirmed hand: " + hand );
            
            /// Send play to server
            if instance_exists(network) {
                var hand_packet = buffer_create(1, buffer_grow, 1);
                buffer_write(hand_packet, buffer_string, "game_rps_hand");
                buffer_write(hand_packet, buffer_string, global.username);
                buffer_write(hand_packet, buffer_string, hand);
                network_write(network.socket, hand_packet);
            }
            
            // Check if enemy has already moved
            if (obj_game_online.enemy_hand != "") {
                // Continue the game
                with (obj_game_online.current_hand) event_perform(ev_other,ev_user0);
            } else {
                // If not display the syncro ... dots
                go_syncro.show = true;
                // Hide it when receive enemy move
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Then Single player case
if instance_exists(obj_game) {
    if (obj_game.select_enabled) {
        if (obj_game.selected_hand != hand){
            with(obj_hand) {
                image_index = 1;
            }
            obj_game.selected_hand = hand;
            image_index = 0;
            obj_game.player_text = "Again to confirm";
            show_debug_message("Selected hand: " + hand );
        } else {
            obj_game.select_enabled = false;
            obj_game.player_text = "";
            show_debug_message("Confirmed hand: " + hand );
            // Set as current hand
            obj_game.current_hand = id;
            
            // Now start the game check   
            with(obj_hand) {
                if (other.id != id){
                    fade = true;
                } else {
                    // create enemy hand
                    var cross = instance_create(view_wview[0]/2-sprite_width/2,42,obj_cross);
                    cross.image_xscale = 0.5;
                    cross.image_yscale = 0.5;
                    
                    alarm[0] = room_speed/5;
                    with(obj_game) {
                        alarm[0] = room_speed;
                        checking = true;
                    }
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Online start game check   
with(obj_hand) {
    if (other.id != id){
        fade = true;
    } else {
        // create enemy hand
        var cross = instance_create(view_wview[0]/2-sprite_width/2,42,obj_cross);
        cross.image_xscale = 0.5;
        cross.image_yscale = 0.5;
        
        alarm[0] = room_speed/5;
        with(obj_game_online) {
            alarm[0] = room_speed;
            // Aqui comprobamos la jugada
            checking = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
