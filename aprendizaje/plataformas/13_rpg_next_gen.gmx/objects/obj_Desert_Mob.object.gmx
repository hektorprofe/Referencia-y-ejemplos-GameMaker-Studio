<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Desert_Mob_Down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Monster_Base</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
randomize();
image_speed = 0.15;
alarm[0] = random(60);
hero_dist = 0;
vision_r = 48;
dx = 0;
dy = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();    
if (hero_dist &lt; vision_r){
    dir = point_direction(x,y, obj_Hero.phy_position_x, obj_Hero.phy_position_y);  
    dist = random(4)+8;
    dx = lengthdir_x(dist, dir);
    dy = lengthdir_y(dist, dir); 
    alarm[0] = 1+random(7);  
} else {
    if (random(2) &gt; 1)
    {
        dir = random(360);    
        dist = irandom(4);
        dx = lengthdir_x(dist, dir);
        dy = lengthdir_y(dist, dir);  
        alarm[0] = 1+random(15);  
    } else {
        dx = 0;
        dy = 0;   
        alarm[0] = 1+random(30);  
    }
}
//show_debug_message("Moving: " + string(alarm[0]));
// physics_apply_impulse(x,y,dx/5,dy/5);


/// No usamos esto porque se meten en las colisiones
/// dx = lengthdir_x(irandom(2), dir);
///  dy = lengthdir_y(irandom(2), dir);   
/// 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Process the animation

if(phy_position_x+dx&lt;phy_position_x){
    sprite_index=spr_Desert_Mob_Left;
}

else if(phy_position_x+dx&gt;phy_position_x){
    sprite_index=spr_Desert_Mob_Right;
}

else if(phy_position_y+dy&gt;phy_position_y){
    sprite_index=spr_Desert_Mob_Down;
}

else if(phy_position_y+dy&lt;phy_position_y){
    sprite_index=spr_Desert_Mob_Up;
}

if(phy_position_y+dy==phy_position_y &amp;&amp; phy_position_x+dx==phy_position_x){
    sprite_index=spr_Desert_Mob_Down;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// attack to hero
hero_dist = point_distance(phy_position_x, phy_position_y, obj_Hero.phy_position_x, obj_Hero.phy_position_y);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movit
phy_position_x += dx / 5;
phy_position_y += dy / 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
draw_self();

if (hero_dist &lt; vision_r){
    draw_circle_color(x,y,vision_r, c_red,c_red,1);
    draw_line_colour(x,y,obj_Hero.phy_position_x,obj_Hero.phy_position_y,c_red,c_red);
} else{
    draw_circle_color(x,y,vision_r, c_green,c_green,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16.875,18.125</point>
    <point>12,16</point>
  </PhysicsShapePoints>
</object>
