<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>texid = background_get_texture(back);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_set_color(c_white); // default is black
draw_primitive_begin_texture(pr_trianglefan, texid); // two triangles, previously gotten texture id
draw_vertex_texture(0, 0, 0, 0); // top left of screen, top left of texture
draw_vertex_texture(640, 0, 1, 0); // top right of screen, top right of texture
draw_vertex_texture(640, 480, 1, 1); // bottom right of screen, bottom right of texture
//draw_vertex_texture(0, 480, 0, 1); // bottom left of screen, bottom left of texture
draw_primitive_end(); // end discription, draw primitive
draw_set_color(0); // reset color */

// random color: color = make_color_rgb(floor(random(256)),floor(random(256)),floor(random(256)))
draw_set_color(c_red); // default is black
draw_primitive_begin_texture(pr_trianglefan, texid); // two triangles, previously gotten texture id
draw_vertex_texture(320, 120, 0, 0); // top left of screen, top left of texture
draw_vertex_texture(160, 360, 0, 0); // top right of screen, top right of texture
draw_vertex_texture(480, 360, 0, 0); // bottom right of screen, bottom right of texture
//draw_vertex_texture(0, 480, 0, 1); // bottom left of screen, bottom left of texture
draw_primitive_end(); // end discription, draw primitive
draw_set_color(0); // reset color */
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
